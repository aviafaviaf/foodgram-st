version: '3.8'

services:
  db:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - foodgram-network

  backend:
    build:
      context: ./backend
    image: aviaf/foodgram-backend:latest
    depends_on:
      - db
    environment:
      DATABASE_URL: postgres://myuser:mypassword@db:5432/mydb
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_HOST: db
    volumes:
      - static_volume:/app/staticfiles
      - ./backend/recipes/data:/app/recipes/data
      - media_volume:/app/media
    command: >
      sh -c "
      python manage.py migrate &&
      python manage.py seed_data &&
      gunicorn backend.wsgi:application --bind 0.0.0.0:8000
      "
    networks:
      - foodgram-network

  frontend:
    build:
      context: ./frontend
    image: aviaf/foodgram-frontend:latest
    command: sh -c "npm install && npm run build && cp -r build/. /build_output/"
    volumes:
      - frontend_build:/build_output
    networks:
      - foodgram-network

  nginx:
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - frontend_build:/usr/share/nginx/html/
      - static_volume:/app/staticfiles
      - media_volume:/media
    depends_on:
      - backend
      - frontend
    networks:
      - foodgram-network

volumes:
  pgdata:
  static_volume:
  media_volume:
  frontend_build:

networks:
  foodgram-network:
    name: foodgram-st_foodgram-network
    external: true